/*! Generated by redux-scfld not for editing */
'use strict';

import global from './global.js';
import options from './options.js';
import resolver from './resolver.js';
import totems from './totems.js';
import defaultState from './../states';

const namespaceReducersMap = {
    global,
    options,
    resolver,
    totems
};

export default function(state = defaultState, action) {
    const { namespace } = action;
    if ( namespace in namespaceReducersMap ) {
        const prevNamespaceState = state[namespace];
        const nextNamespaceState = namespaceReducersMap[namespace](prevNamespaceState, action);
        if (typeof nextNamespaceState === 'undefined') {
            throw new Error(`State from reducer '${namespace}' cannot be undefined`);
        }
        if (prevNamespaceState !== nextNamespaceState) {
            return { ...state, [namespace]: nextNamespaceState };
        }
    }
    return state;
}